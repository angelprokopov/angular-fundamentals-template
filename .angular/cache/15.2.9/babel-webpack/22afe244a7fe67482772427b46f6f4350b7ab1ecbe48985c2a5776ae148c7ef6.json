{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst TOKEN = \"SESSION_TOKEN\"; // Constant for the session storage entry key\nexport class SessionStorageService {\n  constructor(window) {\n    this.window = window;\n  }\n  setToken(token) {\n    this.window.sessionStorage.setItem(TOKEN, token);\n  }\n  getToken() {\n    return this.window.sessionStorage.getItem(TOKEN);\n  }\n  deleteToken() {\n    this.window.sessionStorage.removeItem(TOKEN);\n  }\n}\nSessionStorageService.ɵfac = function SessionStorageService_Factory(t) {\n  return new (t || SessionStorageService)(i0.ɵɵinject(Window));\n};\nSessionStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SessionStorageService,\n  factory: SessionStorageService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";AAEA,MAAMA,KAAK,GAAG,eAAe,CAAC,CAAC;AAK/B,OAAM,MAAOC,qBAAqB;EAC9BC,YAAoCC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAW;EAErDC,QAAQ,CAACC,KAAa;IAClB,IAAI,CAACF,MAAM,CAACG,cAAc,CAACC,OAAO,CAACP,KAAK,EAAEK,KAAK,CAAC;EACpD;EAEAG,QAAQ;IACJ,OAAO,IAAI,CAACL,MAAM,CAACG,cAAc,CAACG,OAAO,CAACT,KAAK,CAAC;EACpD;EAEAU,WAAW;IACP,IAAI,CAACP,MAAM,CAACG,cAAc,CAACK,UAAU,CAACX,KAAK,CAAC;EAChD;;AAbSC,qBAAqB;mBAArBA,qBAAqB,cACVW,MAAM;AAAA;AADjBX,qBAAqB;SAArBA,qBAAqB;EAAAY,SAArBZ,qBAAqB;EAAAa,YAFlB;AAAM","names":["TOKEN","SessionStorageService","constructor","window","setToken","token","sessionStorage","setItem","getToken","getItem","deleteToken","removeItem","Window","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\auth\\services\\session-storage.service.ts"],"sourcesContent":["import { Injectable, Inject } from \"@angular/core\";\r\n\r\nconst TOKEN = \"SESSION_TOKEN\"; // Constant for the session storage entry key\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class SessionStorageService {\r\n    constructor(@Inject(Window) private window: Window) {}\r\n\r\n    setToken(token: string): void {\r\n        this.window.sessionStorage.setItem(TOKEN, token);\r\n    }\r\n\r\n    getToken(): string | null {\r\n        return this.window.sessionStorage.getItem(TOKEN);\r\n    }\r\n\r\n    deleteToken(): void {\r\n        this.window.sessionStorage.removeItem(TOKEN);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}