{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction RegistrationFormComponent_span_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationFormComponent_span_10_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Name must be at least 6 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationFormComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtemplate(1, RegistrationFormComponent_span_10_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, RegistrationFormComponent_span_10_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formControls[\"name\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formControls[\"name\"].errors[\"minlength\"]);\n  }\n}\nfunction RegistrationFormComponent_span_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationFormComponent_span_15_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please enter a valid email address.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationFormComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtemplate(1, RegistrationFormComponent_span_15_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, RegistrationFormComponent_span_15_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.formControls[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.formControls[\"email\"].errors[\"invalidEmail\"]);\n  }\n}\nfunction RegistrationFormComponent_span_20_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationFormComponent_span_20_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationFormComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtemplate(1, RegistrationFormComponent_span_20_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, RegistrationFormComponent_span_20_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.formControls[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.formControls[\"password\"].errors[\"minlength\"]);\n  }\n}\nexport class RegistrationFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.isSubmitted = false;\n  }\n  ngOnInit() {\n    this.initializeForm();\n  }\n  /**\r\n   * Initializes the registration form with form controls and validators.\r\n   */\n  initializeForm() {\n    this.registrationForm = this.fb.group({\n      name: [\"\", [Validators.required, Validators.minLength(6)]],\n      email: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  /**\r\n   * Getter for easy access to form controls in the template.\r\n   */\n  get formControls() {\n    return this.registrationForm.controls;\n  }\n  /**\r\n   * Handles form submission.\r\n   */\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.registrationForm.valid) {\n      console.log(\"Form Submitted!\", this.registrationForm.value);\n      // Handle form submission logic here (e.g., send data to backend)\n      // Optionally, reset the form after successful submission\n      this.registrationForm.reset();\n      this.isSubmitted = false;\n    } else {\n      console.log(\"Form is invalid\");\n      // Optionally, mark all controls as touched to trigger validation messages\n      this.registrationForm.markAllAsTouched();\n    }\n  }\n}\nRegistrationFormComponent.ɵfac = function RegistrationFormComponent_Factory(t) {\n  return new (t || RegistrationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nRegistrationFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationFormComponent,\n  selectors: [[\"app-registration-form\"]],\n  decls: 29,\n  vars: 11,\n  consts: [[1, \"text-align-center\"], [1, \"app-plate\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"registration-form\"], [1, \"form__control\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Enter your name\", \"formControlName\", \"name\"], [\"id\", \"nameErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter your email\", \"formControlName\", \"email\", \"emailValidator\", \"\"], [\"id\", \"emailErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter your password\", \"formControlName\", \"password\"], [\"id\", \"passwordErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [1, \"form__action\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"form__text\"], [\"routerLink\", \"/login\"], [\"id\", \"nameErrorMessage\", 1, \"text-danger\"], [4, \"ngIf\"], [\"id\", \"emailErrorMessage\", 1, \"text-danger\"], [\"id\", \"passwordErrorMessage\", 1, \"text-danger\"]],\n  template: function RegistrationFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationFormComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\")(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵtemplate(10, RegistrationFormComponent_span_10_Template, 3, 2, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵtemplate(15, RegistrationFormComponent_span_15_Template, 3, 2, \"span\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 12);\n      i0.ɵɵtemplate(20, RegistrationFormComponent_span_20_Template, 3, 2, \"span\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 14)(22, \"button\", 15);\n      i0.ɵɵtext(23, \" Register \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 16);\n      i0.ɵɵtext(25, \" Already have an account? \");\n      i0.ɵɵelementStart(26, \"a\", 17)(27, \"strong\");\n      i0.ɵɵtext(28, \"Login\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"invalid\", (ctx.isSubmitted || ctx.formControls[\"name\"].touched) && ctx.formControls[\"name\"].invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.isSubmitted || ctx.formControls[\"name\"].touched) && ctx.formControls[\"name\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"invalid\", (ctx.isSubmitted || ctx.formControls[\"email\"].touched) && ctx.formControls[\"email\"].invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.isSubmitted || ctx.formControls[\"email\"].touched) && ctx.formControls[\"email\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"invalid\", (ctx.isSubmitted || ctx.formControls[\"password\"].touched) && ctx.formControls[\"password\"].invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.isSubmitted || ctx.formControls[\"password\"].touched) && ctx.formControls[\"password\"].errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.registrationForm.invalid);\n    }\n  },\n  styles: [\".app-plate[_ngcontent-%COMP%] {\\n  width: 100%;\\n  min-height: 477px;\\n  background-color: #fff;\\n  border: 1px solid #CFCFCF;\\n  border-radius: 4px;\\n  padding: 32px;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.text-align-center[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.app-error-text[_ngcontent-%COMP%] {\\n  color: #FF0000;\\n  position: absolute;\\n  margin-top: 4px;\\n}\\n\\n.form__control[_ngcontent-%COMP%] {\\n  margin-bottom: 24px;\\n}\\n.form__action[_ngcontent-%COMP%] {\\n  margin-top: 54px;\\n}\\n.form__text[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 38px;\\n  flex-wrap: wrap;\\n}\\n\\n.separator[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-bottom: 1px solid #CFCFCF;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.registration-form[_ngcontent-%COMP%] {\\n  width: 260px;\\n  margin-top: 36px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3N0eWxlcy9zdHlsZXMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcmVnaXN0cmF0aW9uLWZvcm0vcmVnaXN0cmF0aW9uLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxzQkFQVTtFQVFWLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0FDSEo7O0FETUE7RUFDSSxrQkFBQTtBQ0hKOztBRE1BO0VBQ0ksY0FsQlE7RUFtQlIsa0JBQUE7RUFDQSxlQUFBO0FDSEo7O0FET0k7RUFDSSxtQkFBQTtBQ0pSO0FET0k7RUFDSSxnQkFBQTtBQ0xSO0FEUUk7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0YsZUFBQTtBQ05OOztBRFVBO0VBQ0ksV0FBQTtFQUNBLGdDQUFBO0FDUEo7O0FEVUE7RUFDSSxVQUFBO0FDUEo7O0FBdENBO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsOEJBQUE7QUF5Q0YiLCJzb3VyY2VzQ29udGVudCI6WyIkY29sb3Itd2hpdGU6ICNmZmY7XHJcbiRjb2xvci1ncmF5OiAjQ0ZDRkNGO1xyXG4kY29sb3ItcmVkOiAjRkYwMDAwO1xyXG5cclxuLmFwcC1wbGF0ZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1pbi1oZWlnaHQ6IDQ3N3B4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yLWdyYXk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBwYWRkaW5nOiAzMnB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4udGV4dC1hbGlnbi1jZW50ZXIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uYXBwLWVycm9yLXRleHQge1xyXG4gICAgY29sb3I6ICRjb2xvci1yZWQ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tdG9wOiA0cHg7XHJcbn1cclxuXHJcbi5mb3JtIHtcclxuICAgICZfX2NvbnRyb2wge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYWN0aW9uIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiA1NHB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tdG9wOiAzOHB4O1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zZXBhcmF0b3Ige1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNvbG9yLWdyYXk7XHJcbn1cclxuXHJcbi50ZXh0LWRhbmdlciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcbiIsIkBpbXBvcnQgJ3NyYy9hcHAvc2hhcmVkL3N0eWxlcy9zdHlsZXMnO1xyXG5cclxuLnJlZ2lzdHJhdGlvbi1mb3JtIHtcclxuICB3aWR0aDogMjYwcHg7XHJcbiAgbWFyZ2luLXRvcDogMzZweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","RegistrationFormComponent","constructor","fb","ngOnInit","initializeForm","registrationForm","group","name","required","minLength","email","password","formControls","controls","onSubmit","isSubmitted","valid","console","log","value","reset","markAllAsTouched","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\shared\\components\\registration-form\\registration-form.component.ts","C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\shared\\components\\registration-form\\registration-form.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n\r\n@Component({\r\n    selector: \"app-registration-form\",\r\n    templateUrl: \"./registration-form.component.html\",\r\n    styleUrls: [\"./registration-form.component.scss\"],\r\n})\r\nexport class RegistrationFormComponent implements OnInit {\r\n    registrationForm!: FormGroup;\r\n    isSubmitted = false;\r\n\r\n    constructor(private fb: FormBuilder) {}\r\n\r\n    ngOnInit(): void {\r\n        this.initializeForm();\r\n    }\r\n\r\n    /**\r\n     * Initializes the registration form with form controls and validators.\r\n     */\r\n    private initializeForm(): void {\r\n        this.registrationForm = this.fb.group({\r\n            name: [\"\", [Validators.required, Validators.minLength(6)]],\r\n            email: [\"\", [Validators.required]], \r\n            password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Getter for easy access to form controls in the template.\r\n     */\r\n    get formControls() {\r\n        return this.registrationForm.controls;\r\n    }\r\n\r\n    /**\r\n     * Handles form submission.\r\n     */\r\n    onSubmit(): void {\r\n        this.isSubmitted = true;\r\n\r\n        if (this.registrationForm.valid) {\r\n            console.log(\"Form Submitted!\", this.registrationForm.value);\r\n            // Handle form submission logic here (e.g., send data to backend)\r\n            // Optionally, reset the form after successful submission\r\n            this.registrationForm.reset();\r\n            this.isSubmitted = false;\r\n        } else {\r\n            console.log(\"Form is invalid\");\r\n            // Optionally, mark all controls as touched to trigger validation messages\r\n            this.registrationForm.markAllAsTouched();\r\n        }\r\n    }\r\n}\r\n","<!-- src/app/auth/registration-form.component.html -->\r\n\r\n<h2 class=\"text-align-center\">Registration</h2>\r\n<div class=\"app-plate\">\r\n  <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n    <div class=\"registration-form\">\r\n      <div>\r\n        <!-- Name Field -->\r\n        <div class=\"form__control\">\r\n          <label for=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" placeholder=\"Enter your name\" formControlName=\"name\"\r\n            [class.invalid]=\"(isSubmitted || formControls['name'].touched) && formControls['name'].invalid\" />\r\n          <!-- Name Error Messages -->\r\n          <span id=\"nameErrorMessage\" class=\"text-danger\"\r\n            *ngIf=\"(isSubmitted || formControls['name'].touched) && formControls['name'].errors\">\r\n            <span *ngIf=\"formControls['name'].errors['required']\">Name is required.</span>\r\n            <span *ngIf=\"formControls['name'].errors['minlength']\">Name must be at least 6 characters long.</span>\r\n          </span>\r\n        </div>\r\n\r\n        <!-- Email Field -->\r\n        <div class=\"form__control\">\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" placeholder=\"Enter your email\" formControlName=\"email\" emailValidator\r\n            [class.invalid]=\"(isSubmitted || formControls['email'].touched) && formControls['email'].invalid\" />\r\n          <!-- Email Error Messages -->\r\n          <span id=\"emailErrorMessage\" class=\"text-danger\"\r\n            *ngIf=\"(isSubmitted || formControls['email'].touched) && formControls['email'].errors\">\r\n            <span *ngIf=\"formControls['email'].errors['required']\">Email is required.</span>\r\n            <span *ngIf=\"formControls['email'].errors['invalidEmail']\">Please enter a valid email address.</span>\r\n          </span>\r\n        </div>\r\n\r\n        <!-- Password Field -->\r\n        <div class=\"form__control\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" placeholder=\"Enter your password\" formControlName=\"password\"\r\n            [class.invalid]=\"(isSubmitted || formControls['password'].touched) && formControls['password'].invalid\" />\r\n          <!-- Password Error Messages -->\r\n          <span id=\"passwordErrorMessage\" class=\"text-danger\"\r\n            *ngIf=\"(isSubmitted || formControls['password'].touched) && formControls['password'].errors\">\r\n            <span *ngIf=\"formControls['password'].errors['required']\">Password is required.</span>\r\n            <span *ngIf=\"formControls['password'].errors['minlength']\">Password must be at least 6 characters\r\n              long.</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form__action\">\r\n        <!-- Submit Button -->\r\n        <button type=\"submit\" [disabled]=\"registrationForm.invalid\" class=\"btn btn-primary\">\r\n          Register\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"form__text\">\r\n        Already have an account? <a routerLink=\"/login\"><strong>Login</strong></a>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}