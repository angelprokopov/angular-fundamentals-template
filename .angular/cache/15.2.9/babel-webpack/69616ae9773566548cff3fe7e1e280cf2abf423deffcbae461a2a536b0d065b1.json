{"ast":null,"code":"import { NG_VALIDATORS } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nexport class EmailValidatorDirective {\n  constructor() {\n    // Regular expression for validating email addresses\n    this.emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/i;\n  }\n  /**\r\n   * Validates the email format.\r\n   * @param control The form control to validate.\r\n   * @returns A validation error object if invalid, otherwise null.\r\n   */\n  validate(control) {\n    const value = control.value;\n    if (value && !this.emailRegex.test(value)) {\n      return {\n        invalidEmail: true\n      };\n    }\n    return null;\n  }\n}\nEmailValidatorDirective.ɵfac = function EmailValidatorDirective_Factory(t) {\n  return new (t || EmailValidatorDirective)();\n};\nEmailValidatorDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: EmailValidatorDirective,\n  selectors: [[\"\", \"emailValidator\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALIDATORS,\n    useExisting: EmailValidatorDirective,\n    multi: true\n  }])]\n});","map":{"version":3,"mappings":"AACA,SAEIA,aAAa,QAGV,gBAAgB;;AAYvB,OAAM,MAAOC,uBAAuB;EAVpCC;IAWI;IACQ,eAAU,GAAW,2CAA2C;;EAExE;;;;;EAKAC,QAAQ,CAACC,OAAwB;IAC7B,MAAMC,KAAK,GAAWD,OAAO,CAACC,KAAK;IAEnC,IAAIA,KAAK,IAAI,CAAC,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC,EAAE;MACvC,OAAO;QAAEG,YAAY,EAAE;MAAI,CAAE;;IAGjC,OAAO,IAAI;EACf;;AAjBSP,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAQ;EAAAC,iCARrB,CACP;IACIC,OAAO,EAAEX,aAAa;IACtBY,WAAW,EAAEX,uBAAuB;IACpCY,KAAK,EAAE;GACV,CACJ;AAAA","names":["NG_VALIDATORS","EmailValidatorDirective","constructor","validate","control","value","emailRegex","test","invalidEmail","selectors","features","provide","useExisting","multi"],"sourceRoot":"","sources":["C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\shared\\directives\\email.directive.ts"],"sourcesContent":["import { Directive } from \"@angular/core\";\r\nimport {\r\n    AbstractControl,\r\n    NG_VALIDATORS,\r\n    ValidationErrors,\r\n    Validator,\r\n} from \"@angular/forms\";\r\n\r\n@Directive({\r\n    selector: \"[emailValidator]\",\r\n    providers: [\r\n        {\r\n            provide: NG_VALIDATORS,\r\n            useExisting: EmailValidatorDirective,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class EmailValidatorDirective implements Validator {\r\n    // Regular expression for validating email addresses\r\n    private emailRegex: RegExp = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/i;\r\n\r\n    /**\r\n     * Validates the email format.\r\n     * @param control The form control to validate.\r\n     * @returns A validation error object if invalid, otherwise null.\r\n     */\r\n    validate(control: AbstractControl): ValidationErrors | null {\r\n        const value: string = control.value;\r\n\r\n        if (value && !this.emailRegex.test(value)) {\r\n            return { invalidEmail: true };\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}