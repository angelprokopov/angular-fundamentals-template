{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"loginForm\"];\nfunction LoginFormComponent_span_12_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_span_12_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please enter a valid email address.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtemplate(1, LoginFormComponent_span_12_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, LoginFormComponent_span_12_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"invalidEmail\"]);\n  }\n}\nfunction LoginFormComponent_span_18_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtemplate(1, LoginFormComponent_span_18_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"required\"]);\n  }\n}\nexport class LoginFormComponent {\n  constructor() {\n    this.isSubmitted = false;\n  }\n  /**\r\n   * Handles the form submission.\r\n   * Checks if the form is valid and performs login logic.\r\n   */\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const password = this.loginForm.value.password;\n      // TODO: Implement actual login logic here (e.g., call an authentication service)\n      console.log(\"Login successful!\");\n      console.log(\"Email:\", email);\n      console.log(\"Password:\", password);\n      // Optionally, reset the form after successful submission\n      this.loginForm.resetForm();\n      this.isSubmitted = false;\n    } else {\n      console.log(\"Form is invalid\");\n    }\n  }\n}\nLoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n  return new (t || LoginFormComponent)();\n};\nLoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginFormComponent,\n  selectors: [[\"app-login-form\"]],\n  viewQuery: function LoginFormComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loginForm = _t.first);\n    }\n  },\n  decls: 28,\n  vars: 7,\n  consts: [[1, \"text-align-center\"], [1, \"app-plate\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"login-form\"], [1, \"form__control\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Enter your email\", \"ngModel\", \"\", \"emailValidator\", \"\", \"required\", \"\", \"aria-describedby\", \"emailErrorMessage\"], [\"emailCtrl\", \"ngModel\"], [\"id\", \"emailErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Enter your password\", \"ngModel\", \"\", \"required\", \"\", \"aria-describedby\", \"passwordErrorMessage\"], [\"passwordCtrl\", \"ngModel\"], [\"id\", \"passwordErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [1, \"form__action\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"form__text\"], [\"routerLink\", \"/register\"], [\"id\", \"emailErrorMessage\", 1, \"text-danger\"], [4, \"ngIf\"], [\"id\", \"passwordErrorMessage\", 1, \"text-danger\"]],\n  template: function LoginFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginFormComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\")(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7, 8);\n      i0.ɵɵtemplate(12, LoginFormComponent_span_12_Template, 3, 2, \"span\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 11, 12);\n      i0.ɵɵtemplate(18, LoginFormComponent_span_18_Template, 2, 1, \"span\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\")(20, \"div\", 14)(21, \"button\", 15);\n      i0.ɵɵtext(22, \" Login \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 16);\n      i0.ɵɵtext(24, \" If you don't have an account, you may \");\n      i0.ɵɵelementStart(25, \"a\", 17)(26, \"strong\");\n      i0.ɵɵtext(27, \"Register\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n      const _r1 = i0.ɵɵreference(11);\n      const _r3 = i0.ɵɵreference(17);\n      i0.ɵɵadvance(10);\n      i0.ɵɵclassProp(\"invalid\", (ctx.isSubmitted || _r1.touched) && _r1.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.isSubmitted || _r1.touched) && _r1.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"invalid\", (ctx.isSubmitted || _r3.touched) && _r3.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.isSubmitted || _r3.touched) && _r3.errors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  styles: [\".app-plate[_ngcontent-%COMP%] {\\n  width: 100%;\\n  min-height: 477px;\\n  background-color: #fff;\\n  border: 1px solid #CFCFCF;\\n  border-radius: 4px;\\n  padding: 32px;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.text-align-center[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.app-error-text[_ngcontent-%COMP%] {\\n  color: #FF0000;\\n  position: absolute;\\n  margin-top: 4px;\\n}\\n\\n.form__control[_ngcontent-%COMP%] {\\n  margin-bottom: 24px;\\n}\\n.form__action[_ngcontent-%COMP%] {\\n  margin-top: 54px;\\n}\\n.form__text[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 38px;\\n  flex-wrap: wrap;\\n}\\n\\n.separator[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-bottom: 1px solid #CFCFCF;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.login-form[_ngcontent-%COMP%] {\\n  width: 260px;\\n  margin-top: 36px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3N0eWxlcy9zdHlsZXMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0ksV0FBQTtFQUNBLGlCQUFBO0VBQ0Esc0JBUFU7RUFRVix5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtBQ0hKOztBRE1BO0VBQ0ksa0JBQUE7QUNISjs7QURNQTtFQUNJLGNBbEJRO0VBbUJSLGtCQUFBO0VBQ0EsZUFBQTtBQ0hKOztBRE9JO0VBQ0ksbUJBQUE7QUNKUjtBRE9JO0VBQ0ksZ0JBQUE7QUNMUjtBRFFJO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNGLGVBQUE7QUNOTjs7QURVQTtFQUNJLFdBQUE7RUFDQSxnQ0FBQTtBQ1BKOztBRFVBO0VBQ0ksVUFBQTtBQ1BKOztBQXRDQTtFQUNFLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLDhCQUFBO0FBeUNGIiwic291cmNlc0NvbnRlbnQiOlsiJGNvbG9yLXdoaXRlOiAjZmZmO1xyXG4kY29sb3ItZ3JheTogI0NGQ0ZDRjtcclxuJGNvbG9yLXJlZDogI0ZGMDAwMDtcclxuXHJcbi5hcHAtcGxhdGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiA0NzdweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvci1ncmF5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzogMzJweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLnRleHQtYWxpZ24tY2VudGVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmFwcC1lcnJvci10ZXh0IHtcclxuICAgIGNvbG9yOiAkY29sb3ItcmVkO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luLXRvcDogNHB4O1xyXG59XHJcblxyXG4uZm9ybSB7XHJcbiAgICAmX19jb250cm9sIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2FjdGlvbiB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNTRweDtcclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMzhweDtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2VwYXJhdG9yIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvci1ncmF5O1xyXG59XHJcblxyXG4udGV4dC1kYW5nZXIge1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4iLCJAaW1wb3J0ICdzcmMvYXBwL3NoYXJlZC9zdHlsZXMvc3R5bGVzLnNjc3MnO1xyXG5cclxuLmxvZ2luLWZvcm0ge1xyXG4gIHdpZHRoOiAyNjBweDtcclxuICBtYXJnaW4tdG9wOiAzNnB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAgBYA,4BAA6C;IAAAA,kCAAkB;IAAAA,iBAAO;;;;;IACtEA,4BAAiD;IAAAA,mDAAmC;IAAAA,iBAAO;;;;;IAH7FA,gCACiE;IAC/DA,8EAAsE;IACtEA,8EAA2F;IAC7FA,iBAAO;;;;;IAFEA,eAAoC;IAApCA,yEAAoC;IACpCA,eAAwC;IAAxCA,6EAAwC;;;;;IAa/CA,4BAAgD;IAAAA,qCAAqB;IAAAA,iBAAO;;;;;IAF9EA,gCACuE;IACrEA,8EAA4E;IAC9EA,iBAAO;;;;;IADEA,eAAuC;IAAvCA,yEAAuC;;;ACpB1D,OAAM,MAAOC,kBAAkB;EAL/BC;IAOW,gBAAW,GAAY,KAAK;;EAEnC;;;;EAIAC,QAAQ;IACJ,IAAI,CAACC,WAAW,GAAG,IAAI;IAEvB,IAAI,IAAI,CAACC,SAAS,CAACC,KAAK,EAAE;MACtB,MAAMC,KAAK,GAAG,IAAI,CAACF,SAAS,CAACG,KAAK,CAACD,KAAK;MACxC,MAAME,QAAQ,GAAG,IAAI,CAACJ,SAAS,CAACG,KAAK,CAACC,QAAQ;MAE9C;MACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChCD,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC;MAC5BG,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAAC;MAElC;MACA,IAAI,CAACJ,SAAS,CAACO,SAAS,EAAE;MAC1B,IAAI,CAACR,WAAW,GAAG,KAAK;KAC3B,MAAM;MACHM,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;;EAEtC;;AA1BSV,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAY;EAAAC;IAAA;;;;;;;;;;;;;MDR/Bd,6BAA8B;MAAAA,qBAAK;MAAAA,iBAAK;MACxCA,8BAAuB;MACKA;QAAA,OAAYe,cAAU;MAAA,EAAC;MAC/Cf,8BAAwB;MAICA,qBAAK;MAAAA,iBAAQ;MAChCA,+BAEyC;MAEzCA,uEAIO;MACTA,iBAAM;MAGNA,+BAA2B;MACHA,yBAAQ;MAAAA,iBAAQ;MACtCA,iCAE4C;MAE5CA,wEAGO;MACTA,iBAAM;MAGRA,4BAAK;MAICA,wBACF;MAAAA,iBAAS;MAEXA,gCAAwB;MACtBA,wDAAsC;MAAAA,8BAA0B;MAAQA,yBAAQ;MAAAA,iBAAS;;;;;;MAhClEA,gBAAyE;MAAzEA,0EAAyE;MAI7FA,eAA4D;MAA5DA,qEAA4D;MAUrCA,eAA+E;MAA/EA,0EAA+E;MAItGA,eAAkE;MAAlEA,qEAAkE;MAS/CA,eAA8B;MAA9BA,sCAA8B","names":["i0","LoginFormComponent","constructor","onSubmit","isSubmitted","loginForm","valid","email","value","password","console","log","resetForm","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\shared\\components\\login-form\\login-form.component.html","C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\shared\\components\\login-form\\login-form.component.ts"],"sourcesContent":["<!-- src/app/auth/login-form/login-form.component.html -->\r\n\r\n<h2 class=\"text-align-center\">Login</h2>\r\n<div class=\"app-plate\">\r\n  <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n    <div class=\"login-form\">\r\n      <div>\r\n        <!-- Email Field -->\r\n        <div class=\"form__control\">\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" ngModel emailValidator required\r\n            #emailCtrl=\"ngModel\" [class.invalid]=\"(isSubmitted || emailCtrl.touched) && emailCtrl.invalid\"\r\n            aria-describedby=\"emailErrorMessage\" />\r\n          <!-- Email Error Messages -->\r\n          <span id=\"emailErrorMessage\" class=\"text-danger\"\r\n            *ngIf=\"(isSubmitted || emailCtrl.touched) && emailCtrl.errors\">\r\n            <span *ngIf=\"emailCtrl.errors?.['required']\">Email is required.</span>\r\n            <span *ngIf=\"emailCtrl.errors?.['invalidEmail']\">Please enter a valid email address.</span>\r\n          </span>\r\n        </div>\r\n\r\n        <!-- Password Field -->\r\n        <div class=\"form__control\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" ngModel required\r\n            #passwordCtrl=\"ngModel\" [class.invalid]=\"(isSubmitted || passwordCtrl.touched) && passwordCtrl.invalid\"\r\n            aria-describedby=\"passwordErrorMessage\" />\r\n          <!-- Password Error Messages -->\r\n          <span id=\"passwordErrorMessage\" class=\"text-danger\"\r\n            *ngIf=\"(isSubmitted || passwordCtrl.touched) && passwordCtrl.errors\">\r\n            <span *ngIf=\"passwordCtrl.errors?.['required']\">Password is required.</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div class=\"form__action\">\r\n          <!-- Submit Button -->\r\n          <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n        </div>\r\n        <div class=\"form__text\">\r\n          If you don't have an account, you may <a routerLink=\"/register\"><strong>Register</strong></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>","// src/app/auth/login-form/login-form.component.ts\r\n\r\nimport { Component, ViewChild } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: \"app-login-form\",\r\n    templateUrl: \"./login-form.component.html\",\r\n    styleUrls: [\"./login-form.component.scss\"],\r\n})\r\nexport class LoginFormComponent {\r\n    @ViewChild(\"loginForm\") public loginForm!: NgForm;\r\n    public isSubmitted: boolean = false;\r\n\r\n    /**\r\n     * Handles the form submission.\r\n     * Checks if the form is valid and performs login logic.\r\n     */\r\n    onSubmit(): void {\r\n        this.isSubmitted = true;\r\n\r\n        if (this.loginForm.valid) {\r\n            const email = this.loginForm.value.email;\r\n            const password = this.loginForm.value.password;\r\n\r\n            // TODO: Implement actual login logic here (e.g., call an authentication service)\r\n            console.log(\"Login successful!\");\r\n            console.log(\"Email:\", email);\r\n            console.log(\"Password:\", password);\r\n\r\n            // Optionally, reset the form after successful submission\r\n            this.loginForm.resetForm();\r\n            this.isSubmitted = false;\r\n        } else {\r\n            console.log(\"Form is invalid\");\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}