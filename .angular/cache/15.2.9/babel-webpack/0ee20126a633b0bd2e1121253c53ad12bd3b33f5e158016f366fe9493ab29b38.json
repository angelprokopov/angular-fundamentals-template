{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DurationPipe {\n  transform(value) {\n    if (value == null || value < 0) {\n      return \"Invalid duration\";\n    }\n    const hours = Math.floor(value / 60);\n    const minutes = value % 60;\n    const formattedHours = hours.toString().padStart(2, \"0\");\n    const formattedMinutes = minutes.toString().padStart(2, \"0\");\n    // Singular or plural hour based on the hours value\n    const hourLabel = hours === 1 ? \"hour\" : \"hours\";\n    return `${formattedHours}:${formattedMinutes} ${hourLabel}`;\n  }\n}\nDurationPipe.ɵfac = function DurationPipe_Factory(t) {\n  return new (t || DurationPipe)();\n};\nDurationPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"duration\",\n  type: DurationPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,YAAY;EACrBC,SAAS,CAACC,KAAa;IACnB,IAAIA,KAAK,IAAI,IAAI,IAAIA,KAAK,GAAG,CAAC,EAAE;MAC5B,OAAO,kBAAkB;;IAG7B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,GAAG,EAAE,CAAC;IACpC,MAAMI,OAAO,GAAGJ,KAAK,GAAG,EAAE;IAC1B,MAAMK,cAAc,GAAGJ,KAAK,CAACK,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACxD,MAAMC,gBAAgB,GAAGJ,OAAO,CAACE,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAE5D;IACA,MAAME,SAAS,GAAGR,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO;IAEhD,OAAO,GAAGI,cAAc,IAAIG,gBAAgB,IAAIC,SAAS,EAAE;EAC/D;;AAfSX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;;QAAZA,YAAY;EAAAY;AAAA","names":["DurationPipe","transform","value","hours","Math","floor","minutes","formattedHours","toString","padStart","formattedMinutes","hourLabel","pure"],"sourceRoot":"","sources":["C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\shared\\pipes\\duration.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: \"duration\",\r\n})\r\nexport class DurationPipe implements PipeTransform {\r\n    transform(value: number): string {\r\n        if (value == null || value < 0) {\r\n            return \"Invalid duration\";\r\n        }\r\n\r\n        const hours = Math.floor(value / 60);\r\n        const minutes = value % 60;\r\n        const formattedHours = hours.toString().padStart(2, \"0\");\r\n        const formattedMinutes = minutes.toString().padStart(2, \"0\");\r\n\r\n        // Singular or plural hour based on the hours value\r\n        const hourLabel = hours === 1 ? \"hour\" : \"hours\";\r\n\r\n        return `${formattedHours}:${formattedMinutes} ${hourLabel}`;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}