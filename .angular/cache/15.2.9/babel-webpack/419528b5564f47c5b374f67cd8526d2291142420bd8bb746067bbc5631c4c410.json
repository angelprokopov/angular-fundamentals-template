{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport class SearchComponent {\n  constructor() {\n    this.placeholder = \"\"; // Input for placeholder\n    this.search = new EventEmitter(); // Output to emit search term\n    this.searchTerm = \"\"; // For the two-way binding of the input field\n  }\n  // Method to emit the search term when the button is clicked\n  onSearch() {\n    this.search.emit(this.searchTerm);\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)();\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  inputs: {\n    placeholder: \"placeholder\"\n  },\n  outputs: {\n    search: \"search\"\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"app-search\"], [\"type\", \"text\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [3, \"click\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.searchTerm = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"app-button\", 2);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_app_button_click_2_listener() {\n        return ctx.onSearch();\n      });\n      i0.ɵɵtext(3, \"Search\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchTerm)(\"placeholder\", ctx.placeholder);\n    }\n  },\n  styles: [\".app-search[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  align-items: baseline;\\n}\\n.app-search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  margin-right: 24px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxXQUFBO0VBQ0EscUJBQUE7QUFDRjtBQUNFO0VBQ0Usa0JBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtc2VhcmNoIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcclxuXHJcbiAgJiBpbnB1dCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDI0cHg7XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;AAOtE,OAAM,MAAOC,eAAe;EAL5BC;IAMa,gBAAW,GAAW,EAAE,CAAC,CAAC;IACzB,WAAM,GAAyB,IAAIF,YAAY,EAAU,CAAC,CAAC;IAErE,eAAU,GAAW,EAAE,CAAC,CAAC;;EAEzB;EACAG,QAAQ;IACJ,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC;EACrC;;AATSL,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAM;EAAAC;IAAAC;EAAA;EAAAC;IAAAN;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCP5BC,8BAAwB;MACHA;QAAA;MAAA,EAAwB;MAA3CA,iBAA0E;MAC1EA,qCAAiC;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,sBAAM;MAAAA,iBAAa;;;MADjCA,eAAwB;MAAxBA,wCAAwB","names":["EventEmitter","SearchComponent","constructor","onSearch","search","emit","searchTerm","selectors","inputs","placeholder","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\shared\\components\\search\\search.component.ts","C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\shared\\components\\search\\search.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"app-search\",\r\n    templateUrl: \"./search.component.html\",\r\n    styleUrls: [\"./search.component.scss\"],\r\n})\r\nexport class SearchComponent {\r\n    @Input() placeholder: string = \"\"; // Input for placeholder\r\n    @Output() search: EventEmitter<string> = new EventEmitter<string>(); // Output to emit search term\r\n\r\n    searchTerm: string = \"\"; // For the two-way binding of the input field\r\n\r\n    // Method to emit the search term when the button is clicked\r\n    onSearch() {\r\n        this.search.emit(this.searchTerm);\r\n    }\r\n}\r\n","<div class=\"app-search\">\r\n  <input type=\"text\" [(ngModel)]=\"searchTerm\" [placeholder]=\"placeholder\" />\r\n  <app-button (click)=\"onSearch()\">Search</app-button>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}