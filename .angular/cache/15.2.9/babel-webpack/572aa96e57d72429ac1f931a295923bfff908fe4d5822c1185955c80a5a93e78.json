{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@fortawesome/angular-fontawesome\";\nimport * as i3 from \"@angular/common\";\nfunction CourseFormComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Title is required and must be at least 2 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CourseFormComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \" Description is required and must be at least 2 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CourseFormComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \" New author should contain only Latin letters and numbers and be at least 2 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CourseFormComponent_li_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function CourseFormComponent_li_31_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r7 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.addExistingAuthor(i_r7));\n    });\n    i0.ɵɵtext(3, \" Add Author \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const authorGroup_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    let tmp_1_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_1_0 = authorGroup_r6.get(\"name\")) == null ? null : tmp_1_0.value, \" \");\n  }\n}\nfunction CourseFormComponent_li_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function CourseFormComponent_li_36_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const i_r11 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.removeCourseAuthor(i_r11));\n    });\n    i0.ɵɵtext(3, \" Delete Author \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const courseAuthorGroup_r10 = ctx.$implicit;\n    const i_r11 = ctx.index;\n    let tmp_1_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_1_0 = courseAuthorGroup_r10.get(\"name\")) == null ? null : tmp_1_0.value, \" \");\n  }\n}\nfunction CourseFormComponent_span_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵtext(1, \" Duration is required and must be non-negative. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CourseFormComponent {\n  constructor(fb, library) {\n    this.fb = fb;\n    this.library = library;\n    this.submitted = false;\n    // Arrays to manage available authors and course authors\n    this.availableAuthors = [{\n      id: uuidv4(),\n      name: \"Author One\"\n    }, {\n      id: uuidv4(),\n      name: \"Author Two\"\n    }, {\n      id: uuidv4(),\n      name: \"Author Three\"\n    }];\n    this.courseAuthorsList = [];\n    library.addIconPacks(fas);\n    this.buildForm();\n  }\n  buildForm() {\n    this.courseForm = this.fb.group({\n      title: [\"\", [Validators.required, Validators.minLength(2)]],\n      description: [\"\", [Validators.required, Validators.minLength(2)]],\n      duration: [\"\", [Validators.required, Validators.min(0)]],\n      // 'authors' FormArray for available authors\n      authors: this.fb.array([]),\n      // 'courseAuthors' FormArray for authors added to the course\n      courseAuthors: this.fb.array([]),\n      // FormGroup for adding a new author\n      newAuthor: this.fb.group({\n        name: [\"\", [Validators.minLength(2), Validators.pattern(\"^[a-zA-Z0-9 ]+$\")]]\n      })\n    });\n    // Initialize the available authors FormArray\n    this.initializeAvailableAuthors();\n  }\n  // Initialize the 'authors' FormArray with available authors\n  initializeAvailableAuthors() {\n    this.availableAuthors.forEach(author => {\n      this.authors.push(this.fb.group({\n        id: [author.id],\n        name: [author.name]\n      }));\n    });\n  }\n  // Getter for 'authors' FormArray\n  get authors() {\n    return this.courseForm.get(\"authors\");\n  }\n  // Getter for 'courseAuthors' FormArray\n  get courseAuthors() {\n    return this.courseForm.get(\"courseAuthors\");\n  }\n  // Getter for 'newAuthor' FormGroup\n  get newAuthor() {\n    return this.courseForm.get(\"newAuthor\");\n  }\n  // Method to add a new author from the 'newAuthor' FormGroup\n  addNewAuthor() {\n    this.submitted = true;\n    const newAuthorName = this.newAuthor.get(\"name\")?.value.trim();\n    if (this.newAuthor.valid && newAuthorName) {\n      const newAuthor = {\n        id: uuidv4(),\n        name: newAuthorName\n      };\n      // Add to available authors\n      this.availableAuthors.push(newAuthor);\n      this.authors.push(this.fb.group(newAuthor));\n      // Reset the new author input\n      this.newAuthor.reset();\n    }\n    // Mark all controls as touched to show validation errors\n    this.newAuthor.markAllAsTouched();\n  }\n  // Method to add an existing author to course authors\n  addExistingAuthor(index) {\n    const authorGroup = this.authors.at(index);\n    const author = {\n      id: authorGroup.get(\"id\")?.value,\n      name: authorGroup.get(\"name\")?.value\n    };\n    // Add to course authors\n    this.courseAuthors.push(this.fb.group(author));\n    // Remove from available authors\n    this.authors.removeAt(index);\n    // Also remove from availableAuthors array for consistency\n    this.availableAuthors = this.availableAuthors.filter(a => a.id !== author.id);\n  }\n  // Method to remove an author from course authors and add back to available authors\n  removeCourseAuthor(index) {\n    const courseAuthorGroup = this.courseAuthors.at(index);\n    const author = {\n      id: courseAuthorGroup.get(\"id\")?.value,\n      name: courseAuthorGroup.get(\"name\")?.value\n    };\n    // Remove from course authors\n    this.courseAuthors.removeAt(index);\n    // Add back to available authors\n    this.availableAuthors.push(author);\n    this.authors.push(this.fb.group(author));\n  }\n  // Method to handle form submission\n  onSubmit() {\n    this.submitted = true;\n    if (this.courseForm.valid) {\n      const formData = this.courseForm.value;\n      const courseData = {\n        title: formData.title,\n        description: formData.description,\n        duration: formData.duration,\n        authors: this.courseAuthorsList // You can customize this as needed\n      };\n\n      console.log(\"Course Data:\", courseData);\n      // Handle form submission logic here (e.g., send to server)\n    } else {\n      // Mark all controls as touched to trigger validation messages\n      this.courseForm.markAllAsTouched();\n    }\n  }\n  // Helper method to check if a control is invalid and should display an error\n  isControlInvalid(control) {\n    return !!(control && control.invalid && (control.touched || this.submitted));\n  }\n}\nCourseFormComponent.ɵfac = function CourseFormComponent_Factory(t) {\n  return new (t || CourseFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FaIconLibrary));\n};\nCourseFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CourseFormComponent,\n  selectors: [[\"app-course-form\"]],\n  decls: 49,\n  vars: 8,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"app-plate\"], [1, \"course\"], [1, \"form__control\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"Input text\"], [\"id\", \"titleErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Input text\", \"rows\", \"4\", \"cols\", \"5\"], [\"id\", \"descriptionErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [1, \"separator\"], [1, \"course__flex\"], [\"formGroupName\", \"newAuthor\", 2, \"flex\", \"1\", \"margin-right\", \"10px\"], [\"type\", \"text\", \"id\", \"author\", \"formControlName\", \"name\", \"placeholder\", \"Input Author Name\"], [\"type\", \"button\", \"id\", \"createAuthor\", 3, \"click\"], [\"id\", \"authorErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [1, \"course__authors\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"id\", \"duration\", \"formControlName\", \"duration\", \"placeholder\", \"Input duration\"], [1, \"course__duration\"], [\"id\", \"durationErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [1, \"form__action\"], [\"type\", \"submit\"], [\"id\", \"titleErrorMessage\", 1, \"text-danger\"], [\"id\", \"descriptionErrorMessage\", 1, \"text-danger\"], [\"id\", \"authorErrorMessage\", 1, \"text-danger\"], [3, \"formGroupName\"], [\"type\", \"button\", 3, \"click\"], [\"id\", \"durationErrorMessage\", 1, \"text-danger\"]],\n  template: function CourseFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Create / Edit Course\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CourseFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"h3\");\n      i0.ɵɵtext(6, \"Main Info\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵtemplate(11, CourseFormComponent_span_11_Template, 2, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"textarea\", 8);\n      i0.ɵɵtemplate(16, CourseFormComponent_span_16_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"div\", 10);\n      i0.ɵɵelementStart(18, \"h3\");\n      i0.ɵɵtext(19, \"Authors\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 3)(21, \"div\", 11)(22, \"div\", 12);\n      i0.ɵɵelement(23, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function CourseFormComponent_Template_button_click_24_listener() {\n        return ctx.addNewAuthor();\n      });\n      i0.ɵɵtext(25, \" Create Author \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(26, CourseFormComponent_span_26_Template, 2, 0, \"span\", 15);\n      i0.ɵɵelementStart(27, \"div\", 16)(28, \"h4\");\n      i0.ɵɵtext(29, \"Available Authors\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"ul\");\n      i0.ɵɵtemplate(31, CourseFormComponent_li_31_Template, 4, 2, \"li\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 16)(33, \"h4\");\n      i0.ɵɵtext(34, \"Course Authors\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"ul\");\n      i0.ɵɵtemplate(36, CourseFormComponent_li_36_Template, 4, 2, \"li\", 17);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(37, \"div\", 10);\n      i0.ɵɵelementStart(38, \"h3\");\n      i0.ɵɵtext(39, \"Duration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 3)(41, \"div\", 11);\n      i0.ɵɵelement(42, \"input\", 18);\n      i0.ɵɵelementStart(43, \"div\", 19);\n      i0.ɵɵtext(44);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(45, CourseFormComponent_span_45_Template, 2, 0, \"span\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 21)(47, \"button\", 22);\n      i0.ɵɵtext(48, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      let tmp_3_0;\n      let tmp_6_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.courseForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.isControlInvalid(ctx.courseForm.get(\"title\")));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.isControlInvalid(ctx.courseForm.get(\"description\")));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.isControlInvalid(((tmp_3_0 = ctx.courseForm.get(\"newAuthor\")) == null ? null : tmp_3_0.get(\"name\")) || null));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.authors.controls);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.courseAuthors.controls);\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\" Duration: \", (tmp_6_0 = ctx.courseForm.get(\"duration\")) == null ? null : tmp_6_0.value, \" minutes \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isControlInvalid(ctx.courseForm.get(\"duration\")));\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName],\n  styles: [\".app-plate[_ngcontent-%COMP%] {\\n  width: 100%;\\n  min-height: 477px;\\n  background-color: #fff;\\n  border: 1px solid #CFCFCF;\\n  border-radius: 4px;\\n  padding: 32px;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.text-align-center[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.app-error-text[_ngcontent-%COMP%] {\\n  color: #FF0000;\\n  position: absolute;\\n  margin-top: 4px;\\n}\\n\\n.form__control[_ngcontent-%COMP%] {\\n  margin-bottom: 24px;\\n}\\n.form__action[_ngcontent-%COMP%] {\\n  margin-top: 54px;\\n}\\n.form__text[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 38px;\\n  flex-wrap: wrap;\\n}\\n\\n.separator[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-bottom: 1px solid #CFCFCF;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.course[_ngcontent-%COMP%] {\\n  min-width: 60vw;\\n}\\n.course__flex[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: baseline;\\n}\\n.course__flex[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n.course__flex[_ngcontent-%COMP%]   app-button[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n}\\n.course__flex[_ngcontent-%COMP%]   .course__duration[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n}\\n.course__authors[_ngcontent-%COMP%] {\\n  margin-top: 8px;\\n  display: flex;\\n}\\n.course__authors-item[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n.course__icon[_ngcontent-%COMP%] {\\n  margin-left: 4px;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3N0eWxlcy9zdHlsZXMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY291cnNlLWZvcm0vY291cnNlLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxzQkFQVTtFQVFWLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0FDSEo7O0FETUE7RUFDSSxrQkFBQTtBQ0hKOztBRE1BO0VBQ0ksY0FsQlE7RUFtQlIsa0JBQUE7RUFDQSxlQUFBO0FDSEo7O0FET0k7RUFDSSxtQkFBQTtBQ0pSO0FET0k7RUFDSSxnQkFBQTtBQ0xSO0FEUUk7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0YsZUFBQTtBQ05OOztBRFVBO0VBQ0ksV0FBQTtFQUNBLGdDQUFBO0FDUEo7O0FEVUE7RUFDSSxVQUFBO0FDUEo7O0FBdENBO0VBQ0MsZUFBQTtBQXlDRDtBQXZDRTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLHFCQUFBO0FBeUNKO0FBdkNJO0VBQ0UsT0FBQTtBQXlDTjtBQXRDSTtFQUNFLGlCQUFBO0FBd0NOO0FBckNJO0VBQ0UsaUJBQUE7QUF1Q047QUFuQ0U7RUFDRSxlQUFBO0VBQ0EsYUFBQTtBQXFDSjtBQW5DSTtFQUNFLGtCQUFBO0FBcUNOO0FBakNFO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0FBbUNKIiwic291cmNlc0NvbnRlbnQiOlsiJGNvbG9yLXdoaXRlOiAjZmZmO1xyXG4kY29sb3ItZ3JheTogI0NGQ0ZDRjtcclxuJGNvbG9yLXJlZDogI0ZGMDAwMDtcclxuXHJcbi5hcHAtcGxhdGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiA0NzdweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvci1ncmF5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzogMzJweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLnRleHQtYWxpZ24tY2VudGVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmFwcC1lcnJvci10ZXh0IHtcclxuICAgIGNvbG9yOiAkY29sb3ItcmVkO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luLXRvcDogNHB4O1xyXG59XHJcblxyXG4uZm9ybSB7XHJcbiAgICAmX19jb250cm9sIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2FjdGlvbiB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNTRweDtcclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMzhweDtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2VwYXJhdG9yIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvci1ncmF5O1xyXG59XHJcblxyXG4udGV4dC1kYW5nZXIge1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4iLCJAaW1wb3J0ICdzcmMvYXBwL3NoYXJlZC9zdHlsZXMvc3R5bGVzJztcclxuXHJcbi5jb3Vyc2Uge1xyXG4gbWluLXdpZHRoOiA2MHZ3O1xyXG5cclxuICAmX19mbGV4IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XHJcblxyXG4gICAgJiBpbnB1dCB7XHJcbiAgICAgIGZsZXg6IDE7XHJcbiAgICB9XHJcblxyXG4gICAgJiBhcHAtYnV0dG9uIHtcclxuICAgICAgbWFyZ2luLWxlZnQ6IDE2cHg7XHJcbiAgICB9XHJcblxyXG4gICAgJiAuY291cnNlX19kdXJhdGlvbiB7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fYXV0aG9ycyB7XHJcbiAgICBtYXJnaW4tdG9wOiA4cHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICAgICYtaXRlbSB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2ljb24ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAIIA,UAAU,QAEP,gBAAgB;AAEvB,SAASC,GAAG,QAAQ,mCAAmC;AACvD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;;;;;;;ICA3BC,gCAAmG;IACjGA,sEACF;IAAAA,iBAAO;;;;;IAOPA,gCAA+G;IAC7GA,4EACF;IAAAA,iBAAO;;;;;IAkBPA,gCAC6E;IAC3EA,wGACF;IAAAA,iBAAO;;;;;;IAMHA,8BAAoF;IAClFA,YACA;IAAAA,kCAAqD;IAA/BA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IAClDA,4BACF;IAAAA,iBAAS;;;;;;IAJqDA,oCAAmB;IACjFA,eACA;IADAA,sGACA;;;;;;IAWFA,8BAAgG;IAC9FA,YACA;IAAAA,kCAAsD;IAAhCA;MAAA;MAAA;MAAA;MAAA,OAASA,gDAAqB;IAAA,EAAC;IACnDA,+BACF;IAAAA,iBAAS;;;;;;IAJiEA,qCAAmB;IAC7FA,eACA;IADAA,6GACA;;;;;IAoBNA,gCAAyG;IACvGA,gEACF;IAAAA,iBAAO;;;AD/Df,OAAM,MAAOC,mBAAmB;EAY5BC,YAAoBC,EAAe,EAAUC,OAAsB;IAA/C,OAAE,GAAFD,EAAE;IAAuB,YAAO,GAAPC,OAAO;IAVpD,cAAS,GAAY,KAAK;IAE1B;IACA,qBAAgB,GAAa,CACzB;MAAEC,EAAE,EAAEN,MAAM,EAAE;MAAEO,IAAI,EAAE;IAAY,CAAE,EACpC;MAAED,EAAE,EAAEN,MAAM,EAAE;MAAEO,IAAI,EAAE;IAAY,CAAE,EACpC;MAAED,EAAE,EAAEN,MAAM,EAAE;MAAEO,IAAI,EAAE;IAAc,CAAE,CACzC;IACD,sBAAiB,GAAa,EAAE;IAG5BF,OAAO,CAACG,YAAY,CAACV,GAAG,CAAC;IACzB,IAAI,CAACW,SAAS,EAAE;EACpB;EAEAA,SAAS;IACL,IAAI,CAACC,UAAU,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MAC5BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACiB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3DC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAClB,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACiB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACjEE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACnB,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACoB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACxD;MACAC,OAAO,EAAE,IAAI,CAACd,EAAE,CAACe,KAAK,CAAC,EAAE,CAAC;MAC1B;MACAC,aAAa,EAAE,IAAI,CAAChB,EAAE,CAACe,KAAK,CAAC,EAAE,CAAC;MAChC;MACAE,SAAS,EAAE,IAAI,CAACjB,EAAE,CAACO,KAAK,CAAC;QACrBJ,IAAI,EAAE,CACF,EAAE,EACF,CACIV,UAAU,CAACiB,SAAS,CAAC,CAAC,CAAC,EACvBjB,UAAU,CAACyB,OAAO,CAAC,iBAAiB,CAAC,CACxC;OAER;KACJ,CAAC;IAEF;IACA,IAAI,CAACC,0BAA0B,EAAE;EACrC;EAEA;EACAA,0BAA0B;IACtB,IAAI,CAACC,gBAAgB,CAACC,OAAO,CAAEC,MAAM,IAAI;MACrC,IAAI,CAACR,OAAO,CAACS,IAAI,CACb,IAAI,CAACvB,EAAE,CAACO,KAAK,CAAC;QACVL,EAAE,EAAE,CAACoB,MAAM,CAACpB,EAAE,CAAC;QACfC,IAAI,EAAE,CAACmB,MAAM,CAACnB,IAAI;OACrB,CAAC,CACL;IACL,CAAC,CAAC;EACN;EAEA;EACA,IAAIW,OAAO;IACP,OAAO,IAAI,CAACR,UAAU,CAACkB,GAAG,CAAC,SAAS,CAAc;EACtD;EAEA;EACA,IAAIR,aAAa;IACb,OAAO,IAAI,CAACV,UAAU,CAACkB,GAAG,CAAC,eAAe,CAAc;EAC5D;EAEA;EACA,IAAIP,SAAS;IACT,OAAO,IAAI,CAACX,UAAU,CAACkB,GAAG,CAAC,WAAW,CAAc;EACxD;EAEA;EACAC,YAAY;IACR,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,MAAMC,aAAa,GAAG,IAAI,CAACV,SAAS,CAACO,GAAG,CAAC,MAAM,CAAC,EAAEI,KAAK,CAACC,IAAI,EAAE;IAC9D,IAAI,IAAI,CAACZ,SAAS,CAACa,KAAK,IAAIH,aAAa,EAAE;MACvC,MAAMV,SAAS,GAAW;QACtBf,EAAE,EAAEN,MAAM,EAAE;QACZO,IAAI,EAAEwB;OACT;MACD;MACA,IAAI,CAACP,gBAAgB,CAACG,IAAI,CAACN,SAAS,CAAC;MACrC,IAAI,CAACH,OAAO,CAACS,IAAI,CAAC,IAAI,CAACvB,EAAE,CAACO,KAAK,CAACU,SAAS,CAAC,CAAC;MAC3C;MACA,IAAI,CAACA,SAAS,CAACc,KAAK,EAAE;;IAE1B;IACA,IAAI,CAACd,SAAS,CAACe,gBAAgB,EAAE;EACrC;EAEA;EACAC,iBAAiB,CAACC,KAAa;IAC3B,MAAMC,WAAW,GAAG,IAAI,CAACrB,OAAO,CAACsB,EAAE,CAACF,KAAK,CAAc;IACvD,MAAMZ,MAAM,GAAW;MACnBpB,EAAE,EAAEiC,WAAW,CAACX,GAAG,CAAC,IAAI,CAAC,EAAEI,KAAK;MAChCzB,IAAI,EAAEgC,WAAW,CAACX,GAAG,CAAC,MAAM,CAAC,EAAEI;KAClC;IAED;IACA,IAAI,CAACZ,aAAa,CAACO,IAAI,CAAC,IAAI,CAACvB,EAAE,CAACO,KAAK,CAACe,MAAM,CAAC,CAAC;IAE9C;IACA,IAAI,CAACR,OAAO,CAACuB,QAAQ,CAACH,KAAK,CAAC;IAE5B;IACA,IAAI,CAACd,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACkB,MAAM,CAC/CC,CAAC,IAAKA,CAAC,CAACrC,EAAE,KAAKoB,MAAM,CAACpB,EAAE,CAC5B;EACL;EAEA;EACAsC,kBAAkB,CAACN,KAAa;IAC5B,MAAMO,iBAAiB,GAAG,IAAI,CAACzB,aAAa,CAACoB,EAAE,CAACF,KAAK,CAAc;IACnE,MAAMZ,MAAM,GAAW;MACnBpB,EAAE,EAAEuC,iBAAiB,CAACjB,GAAG,CAAC,IAAI,CAAC,EAAEI,KAAK;MACtCzB,IAAI,EAAEsC,iBAAiB,CAACjB,GAAG,CAAC,MAAM,CAAC,EAAEI;KACxC;IAED;IACA,IAAI,CAACZ,aAAa,CAACqB,QAAQ,CAACH,KAAK,CAAC;IAElC;IACA,IAAI,CAACd,gBAAgB,CAACG,IAAI,CAACD,MAAM,CAAC;IAClC,IAAI,CAACR,OAAO,CAACS,IAAI,CAAC,IAAI,CAACvB,EAAE,CAACO,KAAK,CAACe,MAAM,CAAC,CAAC;EAC5C;EAEA;EACAoB,QAAQ;IACJ,IAAI,CAAChB,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACpB,UAAU,CAACwB,KAAK,EAAE;MACvB,MAAMa,QAAQ,GAAG,IAAI,CAACrC,UAAU,CAACsB,KAAK;MACtC,MAAMgB,UAAU,GAAG;QACfpC,KAAK,EAAEmC,QAAQ,CAACnC,KAAK;QACrBG,WAAW,EAAEgC,QAAQ,CAAChC,WAAW;QACjCC,QAAQ,EAAE+B,QAAQ,CAAC/B,QAAQ;QAC3BE,OAAO,EAAE,IAAI,CAAC+B,iBAAiB,CAAE;OACpC;;MACDC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,UAAU,CAAC;MACvC;KACH,MAAM;MACH;MACA,IAAI,CAACtC,UAAU,CAAC0B,gBAAgB,EAAE;;EAE1C;EAEA;EACAgB,gBAAgB,CAACC,OAA+B;IAC5C,OAAO,CAAC,EACJA,OAAO,IACPA,OAAO,CAACC,OAAO,KACdD,OAAO,CAACE,OAAO,IAAI,IAAI,CAACzB,SAAS,CAAC,CACtC;EACL;;AAtJS5B,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAsD;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCtBhC3D,0BAAI;MAAAA,oCAAoB;MAAAA,iBAAK;MAC7BA,+BAAuD;MAAxBA;QAAA,OAAY4D,cAAU;MAAA,EAAC;MACpD5D,8BAAuB;MAGfA,yBAAS;MAAAA,iBAAK;MAClBA,8BAA2B;MACNA,qBAAK;MAAAA,iBAAQ;MAEhCA,4BAAiF;MACjFA,wEAEO;MACTA,iBAAM;MAENA,+BAA2B;MACAA,4BAAW;MAAAA,iBAAQ;MAE5CA,+BAA+G;MAC/GA,wEAEO;MACTA,iBAAM;MAENA,2BAA6B;MAG7BA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAChBA,+BAA2B;MAKrBA,6BAAwF;MAC1FA,iBAAM;MACNA,mCAAiE;MAA3CA;QAAA,OAAS4D,kBAAc;MAAA,EAAC;MAC5C5D,gCACF;MAAAA,iBAAS;MAEXA,yEAGO;MAGPA,gCAA6B;MACvBA,kCAAiB;MAAAA,iBAAK;MAC1BA,2BAAI;MACFA,qEAKK;MACPA,iBAAK;MAIPA,gCAA6B;MACvBA,+BAAc;MAAAA,iBAAK;MACvBA,2BAAI;MACFA,qEAKK;MACPA,iBAAK;MAITA,2BAA6B;MAG7BA,2BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MACjBA,+BAA2B;MAGvBA,6BAA6F;MAC7FA,gCAA8B;MAC5BA,aACF;MAAAA,iBAAM;MAERA,yEAEO;MACTA,iBAAM;MAGNA,gCAA0B;MACFA,uBAAM;MAAAA,iBAAS;;;;;MAzFvCA,eAAwB;MAAxBA,0CAAwB;MAS4BA,eAA+C;MAA/CA,wEAA+C;MASzCA,eAAqD;MAArDA,8EAAqD;MAqB1GA,gBAAwE;MAAxEA,uIAAwE;MAQ3CA,eAAqB;MAArBA,8CAAqB;MAafA,eAA2B;MAA3BA,oDAA2B;MAmB7DA,eACF;MADEA,4HACF;MAEmDA,eAAkD;MAAlDA,2EAAkD","names":["Validators","fas","v4","uuidv4","i0","CourseFormComponent","constructor","fb","library","id","name","addIconPacks","buildForm","courseForm","group","title","required","minLength","description","duration","min","authors","array","courseAuthors","newAuthor","pattern","initializeAvailableAuthors","availableAuthors","forEach","author","push","get","addNewAuthor","submitted","newAuthorName","value","trim","valid","reset","markAllAsTouched","addExistingAuthor","index","authorGroup","at","removeAt","filter","a","removeCourseAuthor","courseAuthorGroup","onSubmit","formData","courseData","courseAuthorsList","console","log","isControlInvalid","control","invalid","touched","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\shared\\components\\course-form\\course-form.component.ts","C:\\Users\\Duev\\Desktop\\EPAM-ACADEMY\\FRONT-END-SPECIALIZATION\\ANGULAR\\angular-fundamentals-template\\src\\app\\shared\\components\\course-form\\course-form.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport {\r\n    FormBuilder,\r\n    FormGroup,\r\n    FormArray,\r\n    Validators,\r\n    AbstractControl,\r\n} from \"@angular/forms\";\r\nimport { FaIconLibrary } from \"@fortawesome/angular-fontawesome\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\ninterface Author {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\n@Component({\r\n    selector: \"app-course-form\",\r\n    templateUrl: \"./course-form.component.html\",\r\n    styleUrls: [\"./course-form.component.scss\"],\r\n})\r\nexport class CourseFormComponent {\r\n    courseForm!: FormGroup; // Definite assignment assertion\r\n    submitted: boolean = false;\r\n\r\n    // Arrays to manage available authors and course authors\r\n    availableAuthors: Author[] = [\r\n        { id: uuidv4(), name: \"Author One\" },\r\n        { id: uuidv4(), name: \"Author Two\" },\r\n        { id: uuidv4(), name: \"Author Three\" },\r\n    ];\r\n    courseAuthorsList: Author[] = [];\r\n\r\n    constructor(private fb: FormBuilder, private library: FaIconLibrary) {\r\n        library.addIconPacks(fas);\r\n        this.buildForm();\r\n    }\r\n\r\n    buildForm(): void {\r\n        this.courseForm = this.fb.group({\r\n            title: [\"\", [Validators.required, Validators.minLength(2)]],\r\n            description: [\"\", [Validators.required, Validators.minLength(2)]],\r\n            duration: [\"\", [Validators.required, Validators.min(0)]],\r\n            // 'authors' FormArray for available authors\r\n            authors: this.fb.array([]),\r\n            // 'courseAuthors' FormArray for authors added to the course\r\n            courseAuthors: this.fb.array([]),\r\n            // FormGroup for adding a new author\r\n            newAuthor: this.fb.group({\r\n                name: [\r\n                    \"\",\r\n                    [\r\n                        Validators.minLength(2),\r\n                        Validators.pattern(\"^[a-zA-Z0-9 ]+$\"),\r\n                    ],\r\n                ],\r\n            }),\r\n        });\r\n\r\n        // Initialize the available authors FormArray\r\n        this.initializeAvailableAuthors();\r\n    }\r\n\r\n    // Initialize the 'authors' FormArray with available authors\r\n    initializeAvailableAuthors(): void {\r\n        this.availableAuthors.forEach((author) => {\r\n            this.authors.push(\r\n                this.fb.group({\r\n                    id: [author.id],\r\n                    name: [author.name],\r\n                })\r\n            );\r\n        });\r\n    }\r\n\r\n    // Getter for 'authors' FormArray\r\n    get authors(): FormArray {\r\n        return this.courseForm.get(\"authors\") as FormArray;\r\n    }\r\n\r\n    // Getter for 'courseAuthors' FormArray\r\n    get courseAuthors(): FormArray {\r\n        return this.courseForm.get(\"courseAuthors\") as FormArray;\r\n    }\r\n\r\n    // Getter for 'newAuthor' FormGroup\r\n    get newAuthor(): FormGroup {\r\n        return this.courseForm.get(\"newAuthor\") as FormGroup;\r\n    }\r\n\r\n    // Method to add a new author from the 'newAuthor' FormGroup\r\n    addNewAuthor(): void {\r\n        this.submitted = true;\r\n        const newAuthorName = this.newAuthor.get(\"name\")?.value.trim();\r\n        if (this.newAuthor.valid && newAuthorName) {\r\n            const newAuthor: Author = {\r\n                id: uuidv4(),\r\n                name: newAuthorName,\r\n            };\r\n            // Add to available authors\r\n            this.availableAuthors.push(newAuthor);\r\n            this.authors.push(this.fb.group(newAuthor));\r\n            // Reset the new author input\r\n            this.newAuthor.reset();\r\n        }\r\n        // Mark all controls as touched to show validation errors\r\n        this.newAuthor.markAllAsTouched();\r\n    }\r\n\r\n    // Method to add an existing author to course authors\r\n    addExistingAuthor(index: number): void {\r\n        const authorGroup = this.authors.at(index) as FormGroup;\r\n        const author: Author = {\r\n            id: authorGroup.get(\"id\")?.value,\r\n            name: authorGroup.get(\"name\")?.value,\r\n        };\r\n\r\n        // Add to course authors\r\n        this.courseAuthors.push(this.fb.group(author));\r\n\r\n        // Remove from available authors\r\n        this.authors.removeAt(index);\r\n\r\n        // Also remove from availableAuthors array for consistency\r\n        this.availableAuthors = this.availableAuthors.filter(\r\n            (a) => a.id !== author.id\r\n        );\r\n    }\r\n\r\n    // Method to remove an author from course authors and add back to available authors\r\n    removeCourseAuthor(index: number): void {\r\n        const courseAuthorGroup = this.courseAuthors.at(index) as FormGroup;\r\n        const author: Author = {\r\n            id: courseAuthorGroup.get(\"id\")?.value,\r\n            name: courseAuthorGroup.get(\"name\")?.value,\r\n        };\r\n\r\n        // Remove from course authors\r\n        this.courseAuthors.removeAt(index);\r\n\r\n        // Add back to available authors\r\n        this.availableAuthors.push(author);\r\n        this.authors.push(this.fb.group(author));\r\n    }\r\n\r\n    // Method to handle form submission\r\n    onSubmit(): void {\r\n        this.submitted = true;\r\n        if (this.courseForm.valid) {\r\n            const formData = this.courseForm.value;\r\n            const courseData = {\r\n                title: formData.title,\r\n                description: formData.description,\r\n                duration: formData.duration,\r\n                authors: this.courseAuthorsList, // You can customize this as needed\r\n            };\r\n            console.log(\"Course Data:\", courseData);\r\n            // Handle form submission logic here (e.g., send to server)\r\n        } else {\r\n            // Mark all controls as touched to trigger validation messages\r\n            this.courseForm.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    // Helper method to check if a control is invalid and should display an error\r\n    isControlInvalid(control: AbstractControl | null): boolean {\r\n        return !!(\r\n            control &&\r\n            control.invalid &&\r\n            (control.touched || this.submitted)\r\n        );\r\n    }\r\n}\r\n","<h2>Create / Edit Course</h2>\r\n<form [formGroup]=\"courseForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"app-plate\">\r\n    <div class=\"course\">\r\n      <!-- Main Info Section -->\r\n      <h3>Main Info</h3>\r\n      <div class=\"form__control\">\r\n        <label for=\"title\">Title</label>\r\n        <!-- Use the name `title` for the form control. -->\r\n        <input type=\"text\" id=\"title\" formControlName=\"title\" placeholder=\"Input text\" />\r\n        <span id=\"titleErrorMessage\" class=\"text-danger\" *ngIf=\"isControlInvalid(courseForm.get('title'))\">\r\n          Title is required and must be at least 2 characters.\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"form__control\">\r\n        <label for=\"description\">Description</label>\r\n        <!-- Use the name `description` for the form control. -->\r\n        <textarea id=\"description\" formControlName=\"description\" placeholder=\"Input text\" rows=\"4\" cols=\"5\"></textarea>\r\n        <span id=\"descriptionErrorMessage\" class=\"text-danger\" *ngIf=\"isControlInvalid(courseForm.get('description'))\">\r\n          Description is required and must be at least 2 characters.\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"separator\"></div>\r\n\r\n      <!-- Authors Section -->\r\n      <h3>Authors</h3>\r\n      <div class=\"form__control\">\r\n        <!-- New Author Input -->\r\n        <div class=\"course__flex\">\r\n          <div formGroupName=\"newAuthor\" style=\"flex: 1; margin-right: 10px;\">\r\n            <!-- Use the name `newAuthor` for the form group and `name` for the form control. -->\r\n            <input type=\"text\" id=\"author\" formControlName=\"name\" placeholder=\"Input Author Name\" />\r\n          </div>\r\n          <button type=\"button\" (click)=\"addNewAuthor()\" id=\"createAuthor\">\r\n            Create Author\r\n          </button>\r\n        </div>\r\n        <span id=\"authorErrorMessage\" class=\"text-danger\"\r\n          *ngIf=\"isControlInvalid(courseForm.get('newAuthor')?.get('name') || null)\">\r\n          New author should contain only Latin letters and numbers and be at least 2 characters.\r\n        </span>\r\n\r\n        <!-- Available Authors List -->\r\n        <div class=\"course__authors\">\r\n          <h4>Available Authors</h4>\r\n          <ul>\r\n            <li *ngFor=\"let authorGroup of authors.controls; let i = index\" [formGroupName]=\"i\">\r\n              {{ authorGroup.get('name')?.value }}\r\n              <button type=\"button\" (click)=\"addExistingAuthor(i)\">\r\n                Add Author\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <!-- Course Authors List -->\r\n        <div class=\"course__authors\">\r\n          <h4>Course Authors</h4>\r\n          <ul>\r\n            <li *ngFor=\"let courseAuthorGroup of courseAuthors.controls; let i = index\" [formGroupName]=\"i\">\r\n              {{ courseAuthorGroup.get('name')?.value }}\r\n              <button type=\"button\" (click)=\"removeCourseAuthor(i)\">\r\n                Delete Author\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"separator\"></div>\r\n\r\n      <!-- Duration Section -->\r\n      <h3>Duration</h3>\r\n      <div class=\"form__control\">\r\n        <div class=\"course__flex\">\r\n          <!-- Use the name `duration` for the form control. -->\r\n          <input type=\"number\" id=\"duration\" formControlName=\"duration\" placeholder=\"Input duration\" />\r\n          <div class=\"course__duration\">\r\n            Duration: {{ courseForm.get('duration')?.value }} minutes\r\n          </div>\r\n        </div>\r\n        <span id=\"durationErrorMessage\" class=\"text-danger\" *ngIf=\"isControlInvalid(courseForm.get('duration'))\">\r\n          Duration is required and must be non-negative.\r\n        </span>\r\n      </div>\r\n\r\n      <!-- Submit Button -->\r\n      <div class=\"form__action\">\r\n        <button type=\"submit\">Submit</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}